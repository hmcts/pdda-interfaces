
---------------
CONNECTION INFO
---------------

open SQL Shell (psql)
Server: localhost
Database: pdda
Port: 5432
Username: postgres
Password: postgres


----------------
POSTGRESQL NOTES
----------------

Some commands to consider when using postgresql

\cd *path* - this will change directory to the specified path.
\! pwd - this will print the current directory.
\i '*filename*' - this will run the specified sql file.

SET schema 'pdda'; - this will select the pdda schema. Ensure to set this before running any \i commands.


-------------
PDDA DB SETUP
-------------

Navigate to: 

	/pdda-interfaces/src/main/resources/database/scripts

To create the pdda DB, locate:

	create-pdda-db.sql

Either copy the contents of that file into a new SQL Script and run in DBeaver, this will create the pdda DB. 
Alternatively you can run that file in postgresql to create the pdda DB.

Now run the app using:

	gradle run

FlyWay will be configured to create all the tables, audit tables, indexes, constraints, sequences and triggers
for the pdda schema, by running the files with the naming convention below.

The database scripts follow a naming convention of:

	V1_*__ - These refer to scripts made for Pdda-interfaces
	V2_*__ - These refer to scripts made for Pdm-interfaces
	V3_*__ - These refer to scripts made for Courtel and Firm List /
		 Warned  List / Internet Web Page processing. In development also known as Pdda2.

If you wish to add the test data to your local DB please add this manually by navigating to the test-data directory:

	/pdda-interfaces/src/main/resources/database/test-data

Then locate:

	load_test_data.sql

Either copy the contents of that file into a new SQL Script and run in DBeaver under the pdda schema, this will insert the test data. 
Alternatively you can run that file in postgresql using:

	SET schema 'pdda';

To ensure you are running on the pdda schema, then:

	\i 'load_test_data.sql'


----------------
ADDITIONAL NOTES
----------------

Refresh the database using the temp tables (pdda-create-temp-tables.sql is in the temp folder):
\i 'pdda-create-temp-tables.sql'
\i 'pdda-refdata-refresh.sql'

Housekeeping commands:
CALL xhb_housekeeping_pkg.delete_case_ctx(TRUE);
CALL xhb_housekeeping_pkg.initiate_run(p_run_type=>'C', p_success_log=>TRUE);
CALL xhb_housekeeping_pkg.find_all_hk_cases_for_deletion();
CALL xhb_housekeeping_pkg.process_cpp();
CALL xhb_housekeeping_pkg.process_judges();